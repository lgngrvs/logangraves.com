2021-12-26
Work Time: 1 hour (total 1)
I deleted all the files (in the development branch) today and made a roadmap. My plan is to build the site starting with basic backend features and no styles, then add basic styles, and go from there. The problem with what I did initially -- building the site frontend and then trying to go to the backend -- was that I was trying to fit scripting in around my styling, rather than making elegant styling around the existing scripts. Attempting to integrate the existing folders and pages with all the things needed for the backend was extremely painful. Keeping this in mind, I'm going to try to manage the complexity of this project as best as I can; I am going to try to make the project as simple as possible. (Don't want to have to delete all the files in this project again.) The first step will be setting up the site filesystem, installing relevant packages, etc... I just absolutely despise trying to develop on a Windows computer, because Powershell is trash (i.e. I don't know it) and WSL makes dealing with things (such as installing software) more confusing. The only potential problem I see myself facing in this project is the fact that I have never used a web framework before, and I don't know anything about flask. :)

2021-12-27
Work Time: 2 hours (total 3)
Today's goal was to get the repo set up to start coding (install necessary packages, set up the venv, create .gitignore, etc). I found a few great reference sites for this project [(1) https://flask.palletsprojects.com/en/2.0.x/tutorial/factory/ (2) https://flask.palletsprojects.com/en/1.1.x/tutorial/ (3) https://charlesleifer.com/blog/how-to-make-a-flask-blog-in-one-hour-or-less/] which I can use to figure out what's needed. (1) is helpful because it supplies Windows commands; I know how to use Bash but as I wrote above do not know powershell at all. I ended up working for about 2 hours, give or take a bit, and though I barely got anything actually done on the repo (I created the app.py file, installed venv, set up VScode for the project, and made a .gitignore) I learned a lot about the python programming language in general. It happened that I realized, once I had set up VSCode and venv, etc. etc., how little I actaully knew about the inner workings of the language, so when exposed to the *actual code* contained in the various links above it was made obvious that I wasn't really ready to start; I wasn't at a place where I could study the code and then write my own simplified version of it that fit my own purposes. Thus, I changed my plan, and spent about 45-75 min on learning about python and writing down what I learned into a sort of dictionary-wiki-thing. Most of what I learned was about objects and classes, and what an 'object-oriented' programming language actually is. I intend to put that up on the site as well (in the same way that I will put this up -- I think that having hidden text files around the site that go deeper into its development could be one of the various fun surprises I leave around) once I feel comfortable in my knowledge, i.e. get around to it; I think it could be a helpful resource for other beginners. Currently I have a tag in Standard Notes with all my project files in it -- the roadmap, site design inspiration, the aforementioned dictionary-wiki-thing, and content ideas -- eventually I'll migrate it over, but I don't want to have to maintain 2 versions of the project. I expect infrequent updates. Luckily SN has version history, so chrological history won't be a problem. You know, this being the second log entry, I haven't really explained this project and what's going on much. I'll give a bit of detail, but not too much since this log is for me. ("log" is better than "blog" so maybe I'll use that to refer to posts. Blog is web-log anyway so they mean the same thing. But I digress.) My goal here is to build myself a website, frontend and backend,partly to learn everything that I need to do so, but also partly to have fun on the design and the code sides. It's a fun learning project, basically. This is part of my progression from basics: my first ever real web project, Lens (see my github) was frontend-only, messy, and all-around problematic. I didn't use any web frameworks, in order to learn the fundamentals -- somewhat like people building personal websites back in "the old web" that I hear about, if such a thing ever existed. There may be ethical issues with it too, but since it's such a poor project I'm not worried about it. The point is that I am building my way up towards actually having useful skills, but I want to know the underlying technology (albeit at a high level of abstraction) before I do so. Anyway, I am fully aware that there will likely be security issues if I write my own backend. I expect that to be a learning experience for me as well. (Think of it as incident response training :) .) We'll all see what happens. In the meantime, I'm aiming for simplicity, good design, and above all fun in this project. The next work session will be focused on getting a debug server up locally, learning some SQLite basics, and hopefully using those skills to set up a system to generate static pages and log posts by putting them into the db --> generating them using Jinja2 Templates. Oh, and I'll re-learn how function decorators work because they continue to confuse me. (What does @app-route("/") actually do, behind the scenes??) And hopefully I'll write less, because this is getting exhausting.

2021-12-28
Work time: 3.5 hours (total 6.5)
Alright, I now have a working dev server, with posts stored in a SQLite database but accessible via the index of the post (within the database) in the URL! I used a digitalocean tutorial (https://www.digitalocean.com/community/tutorials/how-to-use-an-sqlite-database-in-a-flask-application) to figure out how to write to and access items from the database, but I wrote my own code for everything except templates/index.html. Next step is to add a few columns to the database, and make posts accessible by slug rather than index. I also need some error handling (404 pages). I learned a lot, mainly relating to SQL and SQLite, and added a few basic things to my wiki-dictionary thing. I also was embarassingly reminded (the hard way) that python has data types. Don't forget that next time, or you'll get "<built-in method title of str object at 0x00000200133D0830>" again :P

2021-12-29
Work time: 5.5 hours (total 12)
I made a lot of progress since the last log, and I don't want to write a whole essay about what's happened. Posts are now accessible via url (using their slug or their post number), as well as through tags. Tag pages display all the posts that have that tag. It's great! Next up is the search function, and I think I'm going to be using WTForms. It'll be hard, since I have no experience with HTML forms, but I guess what'll happen will happen. I'm a little worried about dealing with posts within directories, but I think I know how to deal with that. I may end up using a whole different table for different directories? I'm not sure. I guess that complexity will be added when necessary. 

2021-12-30
Work time: 4 hours (total 16)
So I didn't use WTForms, I just did some basic form parsing stuff that I only half-understand (the half that I understand is the fact that it's insecure /s). I don't really understand it -- my search does not use query strings or anything like that, it just passes the form data to the /search page. Not sure why there are these different things, but I'm happy with a working search function; I'll leave it for now. After doing the search function, I added markdown functionality to the site, and also the "post_parser.py" (for use on individual files, if necessary) and "post_parser_script.py" which turns markdown files stored in the /posts directory (or any directory that I specify within the file) into database entries that are then serve-able. I think I'm about ready to start on the frontend! Security will eventually be a thing I worry about, but I don't want to do that right now.

2021-12-31
Work time: 6 hours (total 22) [these estimates are on the high end, I think]
I did mostly frontend stuff today: the site looks nice now. I feel very cool. I also began adding distinction between types of posts within the db: now only db entries of "type: post" will render the metadata in the page (e.g. the date and the tags) whereas "pages" will only load the title. Next up: probably some security, and getting it deployed on heroku. However, I do feel like it might be bad for me to put it up on a server this early on; security is pretty bad right now and I don't know if I feel like dealing with that kind of thing. On the upside, (and I hadn't realized this) I can pentest my own site! I think I want to put it up, if only so that I can show it off to my family and my technical friends.

2022-08-02
Work time: 3 hours maybe idk
I've been working on just random stuff, fixing some issues handling 404s and such, as well as setting up my identities page. I think I'm getting close to having a fully-publishable site, but I have a few more things to do -- one major issue I'm seeing is I'm getting a lot of FOUCs, both when testing locally and on the heroku box. It's really irritating; script is at the end and CSS in the head, but apparently it's not acceptable to prevent it.

2022-08-03
Work time: about 1.5 hours
I'm working while on the airplane home, and should be sleeping right now, so I'll pause work. I just updated the homepage to a place where I'm happy with it, and made the index file a bit more useful by adding a sitemap. Also added some minor css changes, updated the readme, and fixed some typos. Not a lot of changes for a lot of work; a lot of it was spent wordsmithing the index page (and getting its clickable asterisk to look good, though I'm still unsure about it) and getting used to the templating engine again. Next on my list is to make the site mobile friendly; should be simple enough because I just need to make the text more readable and the menu usable, but in the past mobile sites have been the bane of my existence so we'll see. I guess it's just practice in mobile design that makes you better, right? God, you should see some of my old github projects. I recently looked back on one that I did during freshman year of high school and it was absolutely atrocious. There were weird and choppy animations, strange-looking buttons, poorly-thought-out thematic choices, etc... I'd keep it up on my github but I'd like to make it *slightly* more annoying for OSINTers to find me and it was a project specifically for my high school, with my school name, grad year, everything. (Because of my current life situation, it's not doable for me to scrub identifiers of myself from the interne without significant inconvenience; a dedicated and (at least basically) skilled OSINTer could probably figure out who I am, where I live, and where I go to school. However, I'd like to make it annoying for people who aren't Michael Bazzell [or however you spell his name, I'm on a plane coding offline right now so I can't look it up]). 

2022-08-03
Work time: probably 7 or 8 hours total thus framework
So since I'm flying home from very far away, and I can't sleep on the plane because I'm trying to speedrun re-adjustment to my home sleep schedule, I have a ton of time to work. I brought books and stuff but this is what's happening for me right now. In the past few work sessions I've made some really awesome progress: I added a favicon (which doesn't look very good but it'll have to do for now), dark mode/light mode preference (so it switches automatically based on the browser's mode, it's literally just `@media (prefers-color-scheme: dark)` and then change the colors of the site), and most importantly a mobile-friendly, minimalist version of the site so that when I'm on my phone I can show it to people. I have now done a very significant portion of the things that I have been wanting to do on the site, and now I'm just adding in features; other than updating my identities.txt, and making sure the signature file works, the site is basically ready for first publication. I'm really excited. After somewhere between 30-35 hours of work (based on my very rough estimates) I'm finally ready to publish! Since I don't upload any content to the server database, and the URL and search bars are both escaped/sanitized, I *believe* that the other vulnerabilities shown in the flask documentation (flask.palletsprojects.com/, I don't have internet on the plane so just ctrl+f "security considerations") should not be applicable here. By the way, on the topic of the search bar -- I think I should really add a ?q=[query] thing and base the search system off that, but I distinctly remember not having a clue about how to do that when I tried in January. So I'll leave it how it is until I feel like addressing that. I just realized that I typed "thus framework" instead of "thus far" in the hours worked line above -- just goes to show how fried I am. One interesting thing before I go is that I've been able to figure out a bunch of things through experimentation rather than searching online, e.g. when working on the mobile site it took forever to figure out that I should be using `overflow-wrap: break-word` instead of some other property or like a max-width thing. I was searching in the VSCodium autocomplete for something along the lines of "word-wrap" or "overflow-text" or something like that, and then thought it didn't exist and tried other things, and then came back and found overflow-wrap. (remember, I don't have internet.) I spent a solid 20 minutes at least, probably a lot more (my perception of time is warped) just trying to figure out how to force my code blocks to wrap. For my PGP key in the identities section, I gave it an overflow-scroll, but if I did that with the other blocks I needed to use inline-block rather than inline which messed with the alignment (obviously) of the code blocks within the rest of the text; they kept floating 5 or 10 pixels above where they were supposed to be. Then I eventually figured out that I should use overflow-wrap: break-words and it was smooth from there. I am not writing anything useful in this log right now, so I am going to go -- last note: since the /static/ folder is available, people will be easily able to see the JS file if I ever add one, so they will feel safe. 

2022-08-25 
Work time: 30 minutes
I haven't updated this in a while, so I missed a few commits. I'll try to not miss much more. I just added a word count feature while off-task in class.

2023-06-25
work time: 4 hours
it's like 2:30 am but i just switched the search function to GET instead of POST cause it's nicer. also the reason my post wasn't working was that the title was "about" and it was supposed to be "now". I remain goofy.

2023-06-25
tested PUT and DELETE requests to make sure that the server won't accept them. (nc 127.0.0.1 5000 < deprecated-scripts/PUT.txt) i started escaping parentheses from searches by just replacing them with spaces so that the search will still work -- couldn't figure out how to escape it the "proper way" if there is one. I suspect there's a parentheses compatibility setting that I could turn off and that's probably something i could do, or i could just REMOVE IT

2023-07-04 
STOP FORGETTING TO TURN OFF DEBUG MODE -- IF YOU HAVE AN ISSUE WHERE POSTS ARE LOADING TWICE IT'S BECAUSE OF THAT! In other news, past couple of days I updated the site a bit -- added a source link at the bottom of the website and removed the search bar from the footer cause I don't think it was needed. also, i added a post for my prompts library.

2024-03-27
work time: 10 hours? since the past couple weeks at least
Haven't written here in a while. Made a bunch of updates to my site recently. Trying to update more. Est. work time: 10 hours?

2024-05-15
i think im basically gonna give up on this log, I guess
commit history is good enough and i am bad at estimating how much time i put in stuff